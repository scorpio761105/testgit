<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.1.xsd
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
	<!-- 配置告诉spring进行组件的扫描 -->
	<context:component-scan base-package="com.guigu"/>
	<!-- 导入外部的数据库配置文件 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="username" value="${myusername}"></property>
		<property name="password" value="${mypassword}"></property>
		<property name="url" value="${myurl}"></property>
		<property name="driverClassName" value="${mydriver}"></property>
	</bean>
	<!-- 配置mybatis的sqlSessionFactory -->
	<bean id="sqlsessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 注入mybatis的配置文件 -->
		<property name="configLocation" value="classpath:sqlmap-config.xml"></property>
		<!-- 注入别名 -->
		<property name="typeAliasesPackage" value="com.guigu.pojo"/>
	</bean>
	<!-- 配置所有Mapper的实现类 	-->
	<bean  class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName">
			<idref bean="sqlsessionFactory"/>
		</property>
		<property name="basePackage" value="com.guigu.mapper"/>
	</bean>
	
	<!-- 配置通知 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- 告诉spring事务也使用注解来操作 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 定义一个事务的过滤通知（那些方法需要事务，什么类型的事务，是否只读等）
	<tx:advice id="myAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED"/>
			<tx:method name="modify*" propagation="REQUIRED"/>
			<tx:method name="remove*" propagation="REQUIRED"/>
			<tx:method name="find*" read-only="true" propagation="REQUIRED"/>
			<tx:method name="*" read-only="true" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice> -->
	<!-- 定义一个切面,引用通知 引用切面
	<aop:config>
		<aop:pointcut expression="execution(* com.guigu.service.impl.*.*(..))" id="mypoint"/>
		<aop:advisor advice-ref="myAdvice" pointcut-ref="mypoint"/>
	</aop:config>-->
</beans>